
name: pls
help: |
  Project Level Shortcuts (pls) is a command-line tool designed to streamline 
  your workflow by allowing you to create, manage, and execute custom aliases 
  for frequently used commands.

  Key features:
   * Easy alias creation and modification
        Add, remove, rename, or change functionality of aliases with a simple
        CLI interface.
   * Project Level Specificity 
        Aliases can be defined at both project and global levels, with
        project-specific aliases taking precedence.
   * Intuitive command execution:
        Run a command associated with an alias using the 'pls' prefix.
        e.g. pls open, pls test, pls deploy
   * Easily shareable aliases:
        Streamline your team's workflow by sharing aliases across projects, or
        make setup of your product dead-easy for your users.
        Just add a pls file to the project's root directory, and you're off!
   * Editor Integration:
        Use your preferred text editor to create and modify complex commands.

  To see examples of how to use pls, run 'pls <command> --help'
environment_variables:
- name: pls_filename
  help: |
    The name of the data file in which your aliases live. It is not recommended to change this value for consistency sake, but you can if you feel the need to do so.
  default: .pls.yml
- name: pls_global
  help: |
    The path to the global .pls file (contains aliases that are available in all directories). Default is determined by '\$HOME/\$PLS_FILENAME'.
  default: $(echo $HOME/$PLS_FILENAME)
- name: pls_dir
  help: |
    The path to the directory used by pls for storing internal files, such as the command cache. It is not recommended to set this to a directory in /tmp/, as this may break caching across reboots. Default is determined by '\$HOME/.local/share/pls'.
  default: $(echo $HOME/.local/share/pls)
- name: pls_enable_cache_check
  help: |
    Enable or disable cache checking, which prevents you from unexpectedly running the wrong command. Setting this to false turns off the verification warning that appears when you run an uncached command.
    This is not recommended, especially not on sensitive systems. This setting is overridden by 'pls_always_cache_check'.
  default: "true"
- name: pls_always_verify
  help: |
    This will always prompt you to confirm every command before running it, even if it is already cached. Does not assure that the command is safe, but does give you a chance to review it. This setting overrides 'pls_enable_cache_check'.
  default: "false"
- name: pls_enable_fzf
  help: |
    Enable or disable the use of fzf for interactive selection. Note that this is only relevant for the 'pick_alias' command. If fzf is not installed, this will have no effect.
  default: "true"
commands:
  - name: execute_alias
    alias: [ e ]
    help: |
      Execute the command associated with given ALIAS.
    default: force
    args:
      - name: alias
        help: The alias to execute.
      - name: command_args
        help: Arguments to pass to the command.
        repeatable: true
        required: false
    examples:
      - |
        pls execute_alias build
          Executes the command associated with the alias 'build'.
        pls e test
          Executes the command associated with the alias 'test'.
      - |
        pls deploy
          Executes the command associated with the alias 'deploy'.
      - |
        pls
          Launches an interactive prompt to select an alias to execute.
  - name: list_aliases
    alias: [ l ] 
    help: |
      List all aliases available for invocation in the current directory.
    flags:
      - short: -l
        long: --local
        help: |
          Lists only aliases available in the local context.
        conflicts: [ --global, --all ]
      - short: -g
        long: --global
        help: |
          Lists only aliases available in the global context.
        conflicts: [ --local, --all ]
      - short: -a
        long: --all
        help: |
          Shows aliases in local and global context, even if local alias overwrites global.
        conflicts: [ --local, --global ]
      - short: -c
        long: --command
        help: |
          Also show the command associated with each alias.
    examples:
      - |
        pls list_aliases
          Lists all aliases avaliable in the current directory.
      - |
        pls l -gc
          Lists all aliases that are stored in the file at \$PLS_GLOBAL, and additionally shows the command associated with each alias.
  - name: pick_alias
    alias: [ p ]
    help: |
      Pick an alias from the list of available aliases to execute.
      Note: This supports fuzzy finder 'fzf' if you have it installed.
    examples:
      - |
        pls pick_alias
          Starts an interactive prompt to select an alias to execute.
        pls p
          Same as above.
        pls
          Same as above.
  - name: add_alias
    alias: [ a ]
    help: |
      Add or alter a new alias in the current directory.
    flags:
      - short: -a
        long: --alias
        arg: alias
        help: The name of the alias to add.
        required: true
        validate: not_empty
      - short: -c
        long: --command
        arg: command
        help: The command to associate with the alias.
        required: true
        validate: not_empty
      - short: -f
        long: --force
        help: |
          Overwrite the alias if it already exists.
      - short: -d
        long: --destination
        arg: destination
        help: |
          The directory in which to store the alias. Default is the current directory.  
        validate: is_destination
        required: true
  - name: clear_cache
    help: |
      Clear the cache of all commands that have been run with pls.
    examples:
      - |
        pls clear_cache
  - name: this_does_nothing
    help: |
      This command is just for testing purposes.
      It does nothing. It is only used to test the before hook.
    private: true
dependencies:
  yaml_parser:
    command: [ yq ]
    help: See https://github.com/mikefarah/yq for installation instructions.
